<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>intermediate on Tan Duc Mai</title>
    <link>https://tanducmai.com/tags/intermediate/</link>
    <description>Recent content in intermediate on Tan Duc Mai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 28 Mar 2022 17:37:46 +1030</lastBuildDate>
    
	<atom:link href="https://tanducmai.com/tags/intermediate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Database - SQL - Common Functions</title>
      <link>https://tanducmai.com/posts/database-sql-common-functions/</link>
      <pubDate>Mon, 28 Mar 2022 17:37:46 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-sql-common-functions/</guid>
      <description>Table of Contents  What is a Function? Working with String SUBSTRING Function CHARINDEX Function Example of Working with String Working with Date CAST Function  What is a Function Functions are calculations performed by the Database Management System (DBMS).
Working with String Common functions include:
   Function Example Output     UPPER(col) UPPER(&amp;lsquo;Sam&amp;rsquo;) Sam -&amp;gt; SAM   LOWER(col) LOWER(&amp;lsquo;Sam&amp;rsquo;) Sam -&amp;gt; sam   RTRIM(col) RTRIM(&amp;lsquo;Sam &amp;lsquo;) [ Sam M ] -&amp;gt; [ Sam M]   LTRIM(col) LTRIM(&amp;rsquo; Sam&amp;rsquo;) [ M Sam ] -&amp;gt; [M Sam ]   LEN(col) LEN(&amp;lsquo;Sam&amp;rsquo;) 3   REVERSE(col) REVERSE(&amp;lsquo;Sam&amp;rsquo;) Sam -&amp;gt; maS   LEFT(string, length) LEFT(&amp;lsquo;Sam&amp;rsquo;, 2) Sam -&amp;gt; Sa   RIGHT(string, length) RIGHT(&amp;lsquo;Sam&amp;rsquo;, 2) Sam -&amp;gt; am    Example: SELECT UPPER (&amp;#39;Eynesbury&amp;#39;) AS [School Name] Result:</description>
    </item>
    
    <item>
      <title>Database - SQL - Aggregate Functions</title>
      <link>https://tanducmai.com/posts/database-sql-aggregate-functions/</link>
      <pubDate>Tue, 22 Mar 2022 17:34:33 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-sql-aggregate-functions/</guid>
      <description>Table of Contents  Aggregate Queries? COUNT() SUM() AVG() MAX() &amp;amp; MIN() Maths in SELECT Clause Multiple Aggregate Queries GROUP BY Clause Aggregate queries with JOINS HAVING Clause HAVING and WHERE Clauses  Aggregate Queries Aggregate queries or aggregation is a method of performing computations over sets of numerical values in multiple tuples of a relation and returning a single value.
SQL provides users with many aggregate functions for aggregate queries, including AVG, COUNT, SUM, MIN, MAX, etc.</description>
    </item>
    
    <item>
      <title>Database - SQL - Set Operators</title>
      <link>https://tanducmai.com/posts/database-sql-set-operators/</link>
      <pubDate>Mon, 21 Mar 2022 10:34:07 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-sql-set-operators/</guid>
      <description>Table of Contents  Example Database SET Operators UNION Operator UNION ALL Operator INTERSECT Operator INTERSECT ALL Operator INTERSECT and INNER JOIN EXCEPT Operator  Example Database The below two relations will be used as examples for this post.
SET Operators Set operators are used to combine tuples of query results.
Standard SQL syntax with set operators:
 Inside a SelectSQL statement, a WHERE clause and some keywords (e.g. ORDER BY) can be included.</description>
    </item>
    
    <item>
      <title>Database - SQL - Nested Queries</title>
      <link>https://tanducmai.com/posts/database-sql-nested-queries/</link>
      <pubDate>Wed, 16 Mar 2022 16:15:06 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-sql-nested-queries/</guid>
      <description>Table of Contents  Aliases Nested Queries? Nested Query Rules Qualifying Attribute Names Operators Compare with the JOIN Keyword Nested Queries using Negation NOT IN Operator Nested Queries using ALL Operator EXISTS and IN Operators Nested Queries using EXISTS Operator Nested Queries using NOT EXISTS Operator Nested Queries in SELECT Clause Nested Queries in FROM Clause Comments on Nested Queries  Aliases A Nested query is also called a Subquery or an Inner query.</description>
    </item>
    
    <item>
      <title>Database - SQL - Table Joins</title>
      <link>https://tanducmai.com/posts/database-sql-table-joins/</link>
      <pubDate>Tue, 15 Mar 2022 15:38:40 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-sql-table-joins/</guid>
      <description>Table Of Contents  JOIN Keyword Table Aliases INNER JOIN Keyword Duplicate Column Names Multiple Attributes in a Join Condition OUTER JOIN Keyword LEFT [OUTER] JOIN Keyword RIGHT [OUTER] JOIN Keyword FULL [OUTER] JOIN Keyword Summary of JOIN  JOIN keyword Tables (relations) can be combined to form a new relation using the JOIN keyword.
This relation can have a combination of the attributes from the tables used in the query.</description>
    </item>
    
    <item>
      <title>Database - SQL - Query Writing</title>
      <link>https://tanducmai.com/posts/database-sql-query-writing/</link>
      <pubDate>Mon, 14 Mar 2022 22:16:08 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-sql-query-writing/</guid>
      <description>Table of Contents  Why Query? SELECT Statement WHERE Condition DISTINCT Keyword AS Keyword ORDER BY Keyword TOP Keyword Summary  Why Query Now that we have got our tables storing data (records), let&amp;rsquo;s start asking questions (queries) about those data.
SELECT statement This statement is used to retrieve data from the database.
SELECT syntax:
SELECT &amp;lt;selectList&amp;gt; FROM &amp;lt;tableName&amp;gt; WHERE &amp;lt;conditions&amp;gt;;  The SELECT clause defines the target list of attributes/values to be returned.</description>
    </item>
    
    <item>
      <title>Database - SQL - Data Manipulation</title>
      <link>https://tanducmai.com/posts/database-sql-data-manipulation/</link>
      <pubDate>Fri, 11 Mar 2022 11:53:55 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-sql-data-manipulation/</guid>
      <description>Table of Contents  Data Manipulation INSERT INTO Statement DELETE FROM Statement DELETE FROM and DROP TABLE Statements UPDATE Statement  Data Manipulation So we have created a set of tables. However:
 How do we actually put data in our database? How do we modify data that is already in our database? How do we answer questions (queries) using our database data?  Key Data Manipulation SQL commands:
 INSERT INTO - Creates new tuple(s) in a table.</description>
    </item>
    
  </channel>
</rss>