<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tan Duc Mai</title>
    <link>https://blissful-mayer-90b8fc.netlify.app/</link>
    <description>Recent content on Tan Duc Mai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 24 Feb 2022 21:29:52 +1030</lastBuildDate>
    
	<atom:link href="https://blissful-mayer-90b8fc.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Database - Key Concepts</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/posts/database-key-concepts/</link>
      <pubDate>Thu, 24 Feb 2022 21:29:52 +1030</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/posts/database-key-concepts/</guid>
      <description>Table Of Contents  What is a Key? Super Key Candidate Key Primary Key Unique Key Surrogate Key Natural Key Foreign Key  Source: Arvindzeclass
What Is A Key A KEY in the DBMS is a set of one or more attributes whose values can uniquely identify a given tuple within a relation.
There are generally eight types of keys:
 Super Key Candidate Key (CK) (name given to all keys) Primary Key (PK) is a value that identifies a particular tuple.</description>
    </item>
    
    <item>
      <title>Database - Relational Concepts</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/posts/database-relational-concepts/</link>
      <pubDate>Wed, 23 Feb 2022 07:58:02 +1030</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/posts/database-relational-concepts/</guid>
      <description>Table of Contents  General Terminology Relations Attributes Domains Table Schemas Tuples Put It All Together  General Terminology    Relational Name Common Name Alternative     relation table -   attribute colum field   tuple row record    Within a table, every column name must be UNIQUE.
Within a Table every row must be UNIQUE (no duplicate data!).
Every Row must have a unique Primary Key that can identify that data row only!</description>
    </item>
    
    <item>
      <title>Database - Why?</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/posts/database-why/</link>
      <pubDate>Tue, 22 Feb 2022 06:23:37 +1030</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/posts/database-why/</guid>
      <description>Table of Contents  Traditional &amp;amp; Physical Data Storage Modern &amp;amp; Digital Data Storage  Problems With Traditional And Physical Data Storage  Limited by physical size Limited multi-access - a borrowed book can only be viewed by one person at a time. Limited search methods (title, author, subject) Slow turn-around Multiple indexes that must be rigorously maintained. Complex Query Limitations - vast amounts of time wasted counting the number of books on a subject or by an author.</description>
    </item>
    
    <item>
      <title>Database - Fundamentals</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/posts/database-fundamentals/</link>
      <pubDate>Mon, 21 Feb 2022 05:11:42 +1030</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/posts/database-fundamentals/</guid>
      <description>Table of Contents  What is a Database? Database Management System (DBMS) Example of a Database Why Bother Storing Data? Examples of Facts Analysed from Stored Data How to Query the Database? More about the Role of a DBMS Structure of a DBMS  Source: Toptal
What Is A Database A collection of tables containing data that are used to retrieve information.
A collection of potentially useful data that models real-world or conceptual objects and their relationships.</description>
    </item>
    
    <item>
      <title>Credit Card Validator</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/credit-card-validator/</link>
      <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/credit-card-validator/</guid>
      <description>→ GitHub Introduction Chances are you have a credit card in your wallet or purse. Credit card numbers have a &amp;lsquo;checksum&amp;rsquo; built into them, a mathematical relationship between at least one number and the others. The checksum enables a computer to detect typos, if not fraudulent numbers, without having to query a database (which can be slow). Most cards use an algorithm invented by Hans Peter Luhn, a scientist who worked for IBM.</description>
    </item>
    
    <item>
      <title>Python - Class Fundamentals</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/posts/python-class-fundamentals/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +1030</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/posts/python-class-fundamentals/</guid>
      <description>Objects </description>
    </item>
    
    <item>
      <title>Blackjack</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/blackjack/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/blackjack/</guid>
      <description>→ GitHub Table of Contents  Introduction Algorithm Sample Output  Introduction In a standard game of 2-player Blackjack the player and the dealer are dealt 2 cards. The player shows both cards face-up. The dealer shows one of their cards face-up and one face-down. The player decides to draw cards by saying, &amp;ldquo;hit&amp;rdquo;, or stop drawing cards by saying, &amp;ldquo;stand&amp;rdquo;. They will draw cards trying to get their total hand value as close to 21 as possible without going over.</description>
    </item>
    
    <item>
      <title>List Module</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/list-module/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/list-module/</guid>
      <description>→ GitHub Table of Contents  Introduction Aim Implementation Usage Restrictions Sample Output  Introduction to Python Lists A list is an object that contains multiple data items. Lists are mutable, which means that their contents can be changed during a program’s execution. Lists are dynamic data structures, meaning that items may be added to them or removed from them. Indexing, slicing, and various methods can be used to work with lists in a program.</description>
    </item>
    
    <item>
      <title>Python - Naming Conventions</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/posts/python-naming-conventions/</link>
      <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/posts/python-naming-conventions/</guid>
      <description>Table of Contents  Rules The Python Keywords Use of Underscores Readability Matters Style of Naming Variables Sample Variable Names Reference Further Research  Rules Although you are allowed to make up your own names for variables, you must follow these rules:
1. You cannot use one of Python&amp;#39;s keywords as a variable name2. A variable or function name cannot contain spaces.3. The first character must be one of the letters a.</description>
    </item>
    
    <item>
      <title>Caesar Cipher Cryptography</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/caesar-cipher-cryptography/</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/caesar-cipher-cryptography/</guid>
      <description>→ GitHub Table of Contents  Aim Introduction Mainly Used Functions Module options Encryption Process Decryption Process Sample Output  Aim Use Caesar Cipher technique to encrypt or decrypt an inputted message.
Introduction A simple way to encrypt data is attributed to Julius Caesar, the Roman Emperor. This method takes each character in a message and replaces it with one which is a certain distance (offset) along the alphabet from it.</description>
    </item>
    
    <item>
      <title>Petals Around The Rose</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/petals-around-the-rose/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/petals-around-the-rose/</guid>
      <description>→ GitHub Table of Contents  Aim Introduction Further Research Sample Output  Aim Write a Pytram that allows a user to play a game called Petals Around the Rose. The program allows the user to repeatedly guess the answer to the puzzle until the user chooses to stop guessing/playing. Once the user chooses to stop guessing, the program will report the user’s and game play statistics to the screen.</description>
    </item>
    
    <item>
      <title>Solar System Turtle Graphics</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/solar-system-turtle-graphics/</link>
      <pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/solar-system-turtle-graphics/</guid>
      <description>→ GitHub Table of Contents  Aim Implementation Output Video Production  Aim Use Turtle graphics to draw an illustration of the Solar System, with appropriate scaling.
Implementation There are two algorithms that I constantly use when working with a Python Turtle project, which is making a turtle and moving it. Accordingly, I define the two functions to eliminate repetitive code and put them into a new Python file. This is to make it possible to break up such a large program into manageable sized parts, and to keep related parts together.</description>
    </item>
    
    <item>
      <title>Three Prime Checker</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/three-prime-checker/</link>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/three-prime-checker/</guid>
      <description>→ GitHub Table of Contents  Introduction Algorithms Sample Output  Introduction I came up with three different algorithms for determining whether a number is prime. After running the three, I use a special procedure to time the efficiency of each algorithm to find out which is better than another. The core of this project is to adopt different perspectives on a problem, with each way of handling a problem will have pros or cons over another.</description>
    </item>
    
    <item>
      <title>Olympic Medals Turtle Graphics</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/olympic-medals-turtle-graphics/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/olympic-medals-turtle-graphics/</guid>
      <description>→ GitHub Table of Contents  Aim Leaderboard Implementation Output Video Production  Aim Use Turtle graphics (turtle module) to draw a pie chart representing the share of gold medals at the Olympic Games Tokyo as of 2 August 2021.
Leaderboard Source: Adelaide Advertiser 3 August 2021
Implementation To begin, I convert the numbers of gold medals into percentages in order to draw the pie chart’s segments. The corresponding percentage is converted by dividing the number of gold medals by 360%.</description>
    </item>
    
    <item>
      <title>City Life Turtle Graphics</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/city-life-turtle-graphics/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/city-life-turtle-graphics/</guid>
      <description>→ GitHub Table of Contents  Aim Implementation Output Video Production  Aim Use Turtle graphics (turtle module) to draw an illustration of the city life, with house, car, animal, and so on.
Implementation To begin, I import the turtle module, after which I define all of the functions I am going to use in the code. I then set the window for the project by setting the height and width.</description>
    </item>
    
    <item>
      <title>Multi-level Guessing Game</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/projects/multi-level-guessing-game/</link>
      <pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/projects/multi-level-guessing-game/</guid>
      <description>→ GitHub Table of Contents  Aim Implementation Sample Output  Aim Create a number guessing game divided into three levels of difficulty. I divide this project into small functions and place them in separate files to be used as modules.
Implementation I begin by greeting the user and prompt them to choose which level (easy, medium, or hard) they want to play | welcome.py. With that option, I then start the corresponding function which is stored in options.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/about/</guid>
      <description>I have just obtained a Diploma of Information Technology at Eynesbury Institute of Business and Technology (EIBT) and am currently taking an Undergraduate degree in Networking and Cybersecurity at the University of South Australia (UniSA).
 Have a strong Maths background, some programming languages (especially Python), LAN (switching, routing) and rerouting knowledge. Passionate about maximising working outcomes. Confident in working collaboratively through past work experience. Actively seek an internship with opportunity growth and a learning potential that reinforces my technical knowledge.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://blissful-mayer-90b8fc.netlify.app/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blissful-mayer-90b8fc.netlify.app/contact/</guid>
      <description>Want Contact? Have questions or suggestions? Feel free to open an issue on GitHub or ask me on Twitter.</description>
    </item>
    
  </channel>
</rss>