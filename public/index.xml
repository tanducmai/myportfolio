<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tan Duc Mai</title>
    <link>https://tanducmai.com/</link>
    <description>Recent content on Tan Duc Mai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 10 Mar 2022 23:40:53 +1030</lastBuildDate>
    
	<atom:link href="https://tanducmai.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Database - SQL Table Constraints</title>
      <link>https://tanducmai.com/posts/database-sql-table-constraints/</link>
      <pubDate>Thu, 10 Mar 2022 23:40:53 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-sql-table-constraints/</guid>
      <description>Table Of Contents  Definition Hypotheses Syntax Categorisation Intra-relational Constraints Inter-relational Constraints  Definition Constraints are clauses that need to be satisfied by data in the database.
Constraints are like contracts to guard against bad data.
Data that does not meet the rules of a given constraint will not be saved to the database.
 The whole tuple (new record) gets rejected and the DBMS throws an SQL Error. For example:  PRIMARY KEY Violation FOREIGN KEY Violation CHECK CONSTRAINT Violation    Hypotheses Consider this example:</description>
    </item>
    
    <item>
      <title>Database - Physical Design</title>
      <link>https://tanducmai.com/posts/database-physical-design/</link>
      <pubDate>Wed, 09 Mar 2022 23:40:53 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-physical-design/</guid>
      <description>Table Of Contents  Physical Modelling? SQL Overview Table Creation and Manipulation Table Definition Table Modification  Physical Modelling After the conceptual design and the physical design, the next phase is to take the relational schemas and implement them using a DBMS.
 Structured Query Language (SQL) is a higher-level language (4GL) used to create the relational database and manage data within the database.  For example:
CREATE TABLE Project ( projectName varchar(200), budget decimal(6,2), manager varchar(200), CONSTRAINT PK_Project PRIMARY KEY (projectName), CONSTRAINT FK_Project_Manager FOREIGN KEY (manager) REFERENCES Manager (name) ); SQL Overview Categorisation SQL commands can be categorised into:</description>
    </item>
    
    <item>
      <title>Database - Logical Design</title>
      <link>https://tanducmai.com/posts/database-logical-design/</link>
      <pubDate>Tue, 08 Mar 2022 23:19:58 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-logical-design/</guid>
      <description>Table Of Contents  Logical Modelling? Logical Design Classes Associations - Multiplicities Recursive Relationships / Self Associations Multivalued Attributes Inheritance  Logical Modelling After the conceptual design, the next phase is to create functional relational schemas based on the conceptual design.
 A written description of how the relational database will be implemented. This includes deciding which CK(s) will become the PK.  Logical Design The logical design of the database is the UML translation process.</description>
    </item>
    
    <item>
      <title>Database - Conceptual Design</title>
      <link>https://tanducmai.com/posts/database-conceptual-design/</link>
      <pubDate>Mon, 07 Mar 2022 19:30:29 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-conceptual-design/</guid>
      <description>Table of Contents  Conceptual Modelling? Conceptual Design? Design Process Conceptual Modelling? Entity-Relationship Model Unified Modelling Language Diagram UML Diagram Example Association Multiplicity Summary of Multiplicity Syntax Association Class Recursive Relationships / Self Associations Aggregation Composition Strong and Weak Entity Type Inheritance (Superclass - Subclass)  Conceptual Modelling Overall, Database requirements are collected and visualised as a UML diagram.
 Uses a higher-level language (4GL) to abstract away the complexities of implementation.</description>
    </item>
    
    <item>
      <title>Database - Normalisation</title>
      <link>https://tanducmai.com/posts/database-normalisation/</link>
      <pubDate>Sat, 26 Feb 2022 01:05:26 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-normalisation/</guid>
      <description>Table of Contents  Good and Bad Database Designs Rule of Thumb Normalisation How to Normalise? Rules of the First Three Normal Forms  Image Source: Evil Martians
Good and Bad Database Designs When designing a database, people tend to do one that captures all or too much of the required information.
It should be noted that more than one design are plausible.
 One design may be better than another.</description>
    </item>
    
    <item>
      <title>Database - Identify the Primary Key</title>
      <link>https://tanducmai.com/posts/database-identify-the-primary-key/</link>
      <pubDate>Fri, 25 Feb 2022 17:54:53 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-identify-the-primary-key/</guid>
      <description>Image Source: Arvindzeclass
Picking a good Primary Key from a list of available Candidate Keys might be an unappealing process, but try to stick to these rules to make your life easier.
Keep The Primary Key As Small As Possible Imagine that the PK will be distributed among other relations.
 1000s of copies of that PK value will appear in the database, which will overload the system.  That is, the smaller they are, the fewer bytes the DBMS has to load into RAM to find related records.</description>
    </item>
    
    <item>
      <title>Database - Key Concepts</title>
      <link>https://tanducmai.com/posts/database-key-concepts/</link>
      <pubDate>Thu, 24 Feb 2022 21:29:52 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-key-concepts/</guid>
      <description>Table Of Contents  What is a Key? Super Key Candidate Key Primary Key Unique Key Surrogate Key Natural Key Foreign Key Non-key Attributes  Image Source: Arvindzeclass
What Is A Key A KEY in the DBMS is a set of one or more attributes whose values can uniquely identify a given tuple within a relation.
There are generally eight types of keys:
 Super Key Candidate Key (CK) (name given to all keys) Primary Key (PK) is a value that identifies a particular tuple.</description>
    </item>
    
    <item>
      <title>Database - Relational Concepts</title>
      <link>https://tanducmai.com/posts/database-relational-concepts/</link>
      <pubDate>Wed, 23 Feb 2022 07:58:02 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-relational-concepts/</guid>
      <description>Table of Contents  General Terminology Relations Attributes Types of Attributes Domains Table Schemas Tuples Put It All Together  General Terminology    Relational Name Common Name Alternative     relation table -   attribute column field   tuple row record    Within a table, every column name must be UNIQUE.
Within a Table every row must be UNIQUE (no duplicate data!).</description>
    </item>
    
    <item>
      <title>Database - Why?</title>
      <link>https://tanducmai.com/posts/database-why/</link>
      <pubDate>Tue, 22 Feb 2022 06:23:37 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-why/</guid>
      <description>Table of Contents  Traditional - Physical Data Storage Modern - Digital Data Storage Database-System Applications  Traditional And Physical Data Storage  Limited by physical size Limited multi-access - a borrowed book can only be viewed by one person at a time. Limited search methods (title, author, subject) Slow turn-around Multiple indexes that must be rigorously maintained. Complex Query Limitations - vast amounts of time wasted counting the number of books on a subject or by an author.</description>
    </item>
    
    <item>
      <title>Database - Fundamentals</title>
      <link>https://tanducmai.com/posts/database-fundamentals/</link>
      <pubDate>Mon, 21 Feb 2022 05:11:42 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-fundamentals/</guid>
      <description>Table of Contents  What is a Database? Database Management System (DBMS) Example of a Database Why Bother Storing Data? Examples of Facts Analysed from Stored Data How to Query the Database? More about the Role of a DBMS Structure of a DBMS  Image Source: Toptal
What Is A Database A collection of tables containing data that are used to retrieve information.
A collection of potentially useful data that models real-world or conceptual objects and their relationships.</description>
    </item>
    
    <item>
      <title>Credit Card Validator</title>
      <link>https://tanducmai.com/projects/credit-card-validator/</link>
      <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/credit-card-validator/</guid>
      <description>â†’ GitHub Introduction Chances are you have a credit card in your wallet or purse. Credit card numbers have a &amp;lsquo;checksum&amp;rsquo; built into them, a mathematical relationship between at least one number and the others. The checksum enables a computer to detect typos, if not fraudulent numbers, without having to query a database (which can be slow). Most cards use an algorithm invented by Hans Peter Luhn, a scientist who worked for IBM.</description>
    </item>
    
    <item>
      <title>Python - Class Fundamentals</title>
      <link>https://tanducmai.com/posts/python-class-fundamentals/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/python-class-fundamentals/</guid>
      <description>Objects </description>
    </item>
    
    <item>
      <title>Blackjack</title>
      <link>https://tanducmai.com/projects/blackjack/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/blackjack/</guid>
      <description>â†’ GitHub Table of Contents  Introduction Algorithm Sample Output  Introduction In a standard game of 2-player Blackjack the player and the dealer are dealt 2 cards. The player shows both cards face-up. The dealer shows one of their cards face-up and one face-down. The player decides to draw cards by saying, &amp;ldquo;hit&amp;rdquo;, or stop drawing cards by saying, &amp;ldquo;stand&amp;rdquo;. They will draw cards trying to get their total hand value as close to 21 as possible without going over.</description>
    </item>
    
    <item>
      <title>List Module</title>
      <link>https://tanducmai.com/projects/list-module/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/list-module/</guid>
      <description>â†’ GitHub Table of Contents  Introduction Aim Implementation Usage Restrictions Sample Output  Introduction to Python Lists A list is an object that contains multiple data items. Lists are mutable, which means that their contents can be changed during a programâ€™s execution. Lists are dynamic data structures, meaning that items may be added to them or removed from them. Indexing, slicing, and various methods can be used to work with lists in a program.</description>
    </item>
    
    <item>
      <title>Python - Naming Conventions</title>
      <link>https://tanducmai.com/posts/python-naming-conventions/</link>
      <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/posts/python-naming-conventions/</guid>
      <description>Table of Contents  Rules The Python Keywords Use of Underscores Readability Matters Style of Naming Variables Sample Variable Names Reference Further Research  Rules Although you are allowed to make up your own names for variables, you must follow these rules:
1. You cannot use one of Python&amp;#39;s keywords as a variable name2. A variable or function name cannot contain spaces, underscore characters &amp;#39;_&amp;#39;can be used instead.3.</description>
    </item>
    
    <item>
      <title>Caesar Cipher Cryptography</title>
      <link>https://tanducmai.com/projects/caesar-cipher-cryptography/</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/caesar-cipher-cryptography/</guid>
      <description>â†’ GitHub Table of Contents  Aim Introduction Mainly Used Functions Module options Encryption Process Decryption Process Sample Output  Aim Use Caesar Cipher technique to encrypt or decrypt an inputted message.
Introduction A simple way to encrypt data is attributed to Julius Caesar, the Roman Emperor. This method takes each character in a message and replaces it with one which is a certain distance (offset) along the alphabet from it.</description>
    </item>
    
    <item>
      <title>Petals Around The Rose</title>
      <link>https://tanducmai.com/projects/petals-around-the-rose/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/petals-around-the-rose/</guid>
      <description>â†’ GitHub Table of Contents  Aim Introduction Further Research Sample Output  Aim Write a Pytram that allows a user to play a game called Petals Around the Rose. The program allows the user to repeatedly guess the answer to the puzzle until the user chooses to stop guessing/playing. Once the user chooses to stop guessing, the program will report the userâ€™s and game play statistics to the screen.</description>
    </item>
    
    <item>
      <title>Solar System Turtle Graphics</title>
      <link>https://tanducmai.com/projects/solar-system-turtle-graphics/</link>
      <pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/solar-system-turtle-graphics/</guid>
      <description>â†’ GitHub Table of Contents  Aim Implementation Output Video Production  Aim Use Turtle graphics to draw an illustration of the Solar System, with appropriate scaling.
Implementation There are two algorithms that I constantly use when working with a Python Turtle project, which is making a turtle and moving it. Accordingly, I define the two functions to eliminate repetitive code and put them into a new Python file. This is to make it possible to break up such a large program into manageable sized parts, and to keep related parts together.</description>
    </item>
    
    <item>
      <title>Three Different Prime Checker</title>
      <link>https://tanducmai.com/projects/three-prime-checker/</link>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/three-prime-checker/</guid>
      <description>â†’ GitHub Table of Contents  Introduction Algorithms Sample Output  Introduction I came up with three different algorithms for determining whether a number is prime. After running the three, I use a special procedure to time the efficiency of each algorithm to find out which is better than another. The core of this project is to adopt different perspectives on a problem, with each way of handling a problem will have pros or cons over another.</description>
    </item>
    
    <item>
      <title>Olympic Medals Turtle Graphics</title>
      <link>https://tanducmai.com/projects/olympic-medals-turtle-graphics/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/olympic-medals-turtle-graphics/</guid>
      <description>â†’ GitHub Table of Contents  Aim Leaderboard Implementation Output Video Production  Aim Use Turtle graphics (turtle module) to draw a pie chart representing the share of gold medals at the Olympic Games Tokyo as of 2 August 2021.
Leaderboard Source: Adelaide Advertiser 3 August 2021
Implementation To begin, I convert the numbers of gold medals into percentages in order to draw the pie chartâ€™s segments. The corresponding percentage is converted by dividing the number of gold medals by 360%.</description>
    </item>
    
    <item>
      <title>City Life Turtle Graphics</title>
      <link>https://tanducmai.com/projects/city-life-turtle-graphics/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/city-life-turtle-graphics/</guid>
      <description>â†’ GitHub Table of Contents  Aim Implementation Output Video Production  Aim Use Turtle graphics (turtle module) to draw an illustration of the city life, with house, car, animal, and so on.
Implementation To begin, I import the turtle module, after which I define all of the functions I am going to use in the code. I then set the window for the project by setting the height and width.</description>
    </item>
    
    <item>
      <title>Multi-level Guessing Game</title>
      <link>https://tanducmai.com/projects/multi-level-guessing-game/</link>
      <pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/projects/multi-level-guessing-game/</guid>
      <description>â†’ GitHub Table of Contents  Aim Implementation For Loop - While Loop Sample Output  Aim Create a number guessing game divided into three levels of difficulty. I divide this project into small functions and place them in separate files to be used as modules.
Implementation I begin by greeting the user and prompt them to choose which level (easy, medium, or hard) they want to play | welcome.py. With that option, I then start the corresponding function which is stored in options.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://tanducmai.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/about/</guid>
      <description>I have just obtained a Diploma of Information Technology at Eynesbury Institute of Business and Technology (EIBT) and am currently taking an Undergraduate degree in Networking and Cybersecurity at the University of South Australia (UniSA).
 Have a strong Maths background, some programming languages (especially Python), LAN (switching, routing) and rerouting knowledge. Passionate about maximising working outcomes. Confident in working collaboratively through past work experience. Actively seek an internship with opportunity growth and a learning potential that reinforces my technical knowledge.</description>
    </item>
    
    <item>
      <title>Contact Me</title>
      <link>https://tanducmai.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/contact/</guid>
      <description>   Category Link     Email tan.duc.work@gmail.com   LinkedIn linkedin.com/in/tanducmai   GitHub github.com/tanducmai    </description>
    </item>
    
  </channel>
</rss>