<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tan Duc Mai</title>
    <link>https://tanducmai.com/posts/</link>
    <description>Recent content in Posts on Tan Duc Mai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 09 Mar 2022 23:40:53 +1030</lastBuildDate>
    
	<atom:link href="https://tanducmai.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Database - Physical Design</title>
      <link>https://tanducmai.com/posts/database-physical-design/</link>
      <pubDate>Wed, 09 Mar 2022 23:40:53 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-physical-design/</guid>
      <description>Table Of Contents  Physical Modelling?  Physical Modelling After the conceptual design and the physical design, the next phase is to take the relational schemas and implement them using a DBMS.
 Structured Query Language (SQL) is a higher-level language (4GL) used to create the relational database and manage data within the database.  For example:
CREATE TABLE Project( ProjectName varchar(200), Budget decimal(6,2), Manager varchar(200), CONSTRAINT projectPk PRIMARY KEY (ProjectName), CONSTRAINT managerFk FOREIGN KEY (Manager) REFERENCES Manager(Name) ); </description>
    </item>
    
    <item>
      <title>Database - Logical Design</title>
      <link>https://tanducmai.com/posts/database-logical-design/</link>
      <pubDate>Tue, 08 Mar 2022 23:19:58 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-logical-design/</guid>
      <description>Table Of Contents  Logical Modelling? Logical Design Classes Associations - Multiplicities Recursive Relationships / Self Associations Multivalued Attributes Inheritance  Logical Modelling After the conceptual design, the next phase is to create functional relational schemas based on the conceptual design.
 A written description of how the relational database will be implemented. This includes deciding which CK(s) will become the PK.  Logical Design The logical design of the database is the UML translation process.</description>
    </item>
    
    <item>
      <title>Database - Conceptual Design</title>
      <link>https://tanducmai.com/posts/database-conceptual-design/</link>
      <pubDate>Mon, 07 Mar 2022 19:30:29 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-conceptual-design/</guid>
      <description>Table of Contents  Conceptual Modelling? Conceptual Design? Design Process Conceptual Modelling? Entity-Relationship Model Unified Modelling Language Diagram UML Diagram Example Association Multiplicity Summary of Multiplicity Syntax Association Class Recursive Relationships / Self Associations Aggregation Composition Strong and Weak Entity Type Inheritance (Superclass - Subclass)  Conceptual Modelling Overall, Database requirements are collected and visualised as a UML diagram.
 Uses a higher-level language (4GL) to abstract away the complexities of implementation.</description>
    </item>
    
    <item>
      <title>Database - Normalisation</title>
      <link>https://tanducmai.com/posts/database-normalisation/</link>
      <pubDate>Sat, 26 Feb 2022 01:05:26 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-normalisation/</guid>
      <description>Table of Contents  Good and Bad Database Designs Rule of Thumb Normalisation How to Normalise? Rules of the First Three Normal Forms  Image Source: Evil Martians
Good and Bad Database Designs When designing a database, people tend to do one that captures all or too much of the required information.
It should be noted that more than one design are plausible.
 One design may be better than another.</description>
    </item>
    
    <item>
      <title>Database - Identify the Primary Key</title>
      <link>https://tanducmai.com/posts/database-identify-the-primary-key/</link>
      <pubDate>Fri, 25 Feb 2022 17:54:53 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-identify-the-primary-key/</guid>
      <description>Image Source: Arvindzeclass
Picking a good Primary Key from a list of available Candidate Keys might be an unappealing process, but try to stick to these rules to make your life easier.
Keep The Primary Key As Small As Possible Imagine that the PK will be distributed among other relations.
 1000s of copies of that PK value will appear in the database, which will overload the system.  That is, the smaller they are, the fewer bytes the DBMS has to load into RAM to find related records.</description>
    </item>
    
    <item>
      <title>Database - Key Concepts</title>
      <link>https://tanducmai.com/posts/database-key-concepts/</link>
      <pubDate>Thu, 24 Feb 2022 21:29:52 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-key-concepts/</guid>
      <description>Table Of Contents  What is a Key? Super Key Candidate Key Primary Key Unique Key Surrogate Key Natural Key Foreign Key Non-key Attributes  Image Source: Arvindzeclass
What Is A Key A KEY in the DBMS is a set of one or more attributes whose values can uniquely identify a given tuple within a relation.
There are generally eight types of keys:
 Super Key Candidate Key (CK) (name given to all keys) Primary Key (PK) is a value that identifies a particular tuple.</description>
    </item>
    
    <item>
      <title>Database - Relational Concepts</title>
      <link>https://tanducmai.com/posts/database-relational-concepts/</link>
      <pubDate>Wed, 23 Feb 2022 07:58:02 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-relational-concepts/</guid>
      <description>Table of Contents  General Terminology Relations Attributes Types of Attributes Domains Table Schemas Tuples Put It All Together  General Terminology    Relational Name Common Name Alternative     relation table -   attribute column field   tuple row record    Within a table, every column name must be UNIQUE.
Within a Table every row must be UNIQUE (no duplicate data!).</description>
    </item>
    
    <item>
      <title>Database - Why?</title>
      <link>https://tanducmai.com/posts/database-why/</link>
      <pubDate>Tue, 22 Feb 2022 06:23:37 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-why/</guid>
      <description>Table of Contents  Traditional - Physical Data Storage Modern - Digital Data Storage Database-System Applications  Traditional And Physical Data Storage  Limited by physical size Limited multi-access - a borrowed book can only be viewed by one person at a time. Limited search methods (title, author, subject) Slow turn-around Multiple indexes that must be rigorously maintained. Complex Query Limitations - vast amounts of time wasted counting the number of books on a subject or by an author.</description>
    </item>
    
    <item>
      <title>Database - Fundamentals</title>
      <link>https://tanducmai.com/posts/database-fundamentals/</link>
      <pubDate>Mon, 21 Feb 2022 05:11:42 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/database-fundamentals/</guid>
      <description>Table of Contents  What is a Database? Database Management System (DBMS) Example of a Database Why Bother Storing Data? Examples of Facts Analysed from Stored Data How to Query the Database? More about the Role of a DBMS Structure of a DBMS  Image Source: Toptal
What Is A Database A collection of tables containing data that are used to retrieve information.
A collection of potentially useful data that models real-world or conceptual objects and their relationships.</description>
    </item>
    
    <item>
      <title>Python - Class Fundamentals</title>
      <link>https://tanducmai.com/posts/python-class-fundamentals/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +1030</pubDate>
      
      <guid>https://tanducmai.com/posts/python-class-fundamentals/</guid>
      <description>Objects </description>
    </item>
    
    <item>
      <title>Python - Naming Conventions</title>
      <link>https://tanducmai.com/posts/python-naming-conventions/</link>
      <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tanducmai.com/posts/python-naming-conventions/</guid>
      <description>Table of Contents  Rules The Python Keywords Use of Underscores Readability Matters Style of Naming Variables Sample Variable Names Reference Further Research  Rules Although you are allowed to make up your own names for variables, you must follow these rules:
1. You cannot use one of Python&amp;#39;s keywords as a variable name2. A variable or function name cannot contain spaces, underscore characters &amp;#39;_&amp;#39;can be used instead.3.</description>
    </item>
    
  </channel>
</rss>